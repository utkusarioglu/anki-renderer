@import url("./hljs-framer.scss");

:root {
  --color-heading-hex: #CCC;
  --color-text-hex: #FFF;
  --color-block-code-hex: #0F6;
  --color-inline-code-hex: #fdba74;
  --color-code-bg-hex: #151515;
  --color-code-bg2-hex: #101010;
  --color-link-hex: #09E;
  --color-border-hex: #555;
  --color-deck-hex: #444;
  --color-close-hex: #299;
  --color-error-bg-hex: #600;

  --length-content-inline-inset-rem: 1rem;
  --length-pre-code-block-padding-rem: 1rem;
  --length-pre-code-hljs-down-nudge: 0.2rem;
  --length-chip-padding-inline-rem: 0.3rem;
  --length-section-block-margin-rem: 1rem;
}

* {
  box-sizing: border-box;
}

html,
body,
body>*:not(#qa, #_mark, #_flag),
.card {
  padding: 0 !important;
  overflow-x: hidden;
  margin-inline: 0 !important;
}

html,
body,
body>*:not(#qa, #_mark, #_flag),
.card,
#qa {
  /* padding-inline: 0 !important; */
  width: 100vw;
}


/*
  This stops unstyled card content being flashed,
  has an equivalent opacity: 1 in the card styling section.
*/
body {
  opacity: initial !important;
}

/* 
  Reserves some space for the deck name on top,
  otherwise the question and deck name superimpose on ankidroid
  see `.deck` as well.
*/
#qa {
  padding-block: 2rem;
  padding-inline: var(--length-content-inline-inset-rem);
  max-width: 640px;
  margin-inline: auto;
}

.card {
  font-family: arial;
  font-size: 16px;
  text-align: center;
  color: var(--color-text-hex) !important;
  text-align: center;
  padding-block: 1rem;
}

h4,
h5,
h6 {
  font-size: 1.1rem;
}

h3 {
  font-size: 1.2rem;
}

h2 {
  font-size: 1.4rem;
}

h1 {
  font-size: 1.6rem;
}

.ranki-global-error>* {
  background-color: var(--color-error-bg-hex);
  color: var(--color-text-hex);
  padding: var(--length-content-inline-inset-rem);
  margin-block: var(--length-section-block-margin-rem);
  text-align: left !important;
}

.ranki-hud {
  position: absolute;
  top: 0.2rem;
  left: 0;
  right: 0;
  /*
    This was set for all elements that relate to body and card but hud needs to
    be an exception
  */
  overflow-x: scroll !important;
  scrollbar-width: none;
}

.ranki-hud::-webkit-scrollbar {
  display: none;
}

.ranki-hud-scroll-container {
  --inset: var(--length-content-inline-inset-rem);
  --chip-padding: var(--length-chip-padding-inline-rem);

  display: flex;

  padding-inline: calc(var(--inset) - var(--chip-padding));
  padding-block: 0.1rem;
  width: max-content;
  margin-inline: auto;
}

.ranki-hud-chip {
  --inline-padding: var(--length-chip-padding-inline-rem);

  padding: 0.2rem var(--inline-padding);
  background-color: var(--color-code-bg-hex);
  color: var(--color-heading-hex);
  margin-inline-end: 0.3rem;
  border-radius: 0.3rem;
  font-size: 0.8rem;
  white-space: nowrap;

  border: 0.2px solid var(--color-code-bg-hex);
}

.ranki-hud-tag {
  color: var(--color-border-hex);
  border-color: var(--color-border-hex);
}


.ranki-hud-chip:last-of-type {
  margin-inline-end: 0;
}

.ranki-hud-chip-deck-separator {
  color: var(--color-border-hex);
  padding-inline: 0.2rem;
}

code:empty,
pre:has(code:empty) {
  display: none;
}

pre>code,
code {
  --inline-padding: var(--length-chip-padding-inline-rem);

  position: relative;
  background-color: var(--color-code-bg2-hex);
  padding: 0.05rem 0.3rem;
  border-radius: 0.3rem;
  color: var(--color-inline-code-hex);
  font-size: smaller;
}

pre {
  padding-block: var(--length-pre-code-block-padding-rem);
  margin-inline: calc(var(--length-content-inline-inset-rem) * -1);
  background-color: var(--color-code-bg-hex);
  color: var(--color-block-code-hex);
  overflow-x: scroll;
  position: relative;
  line-height: 1.2rem;
  font-size: smaller;
}

.ranki-pre-code-language-label {
  --padding-inset-rem: 0.5rem;
  --border-radius-rem: 0.4rem;

  position: absolute;
  top: -0.2rem;
  left: calc(var(--length-content-inline-inset-rem) - var(--padding-inset-rem));
  color: var(--color-heading-hex);
  font-size: 0.6rem;
  background-color: black;
  border-end-end-radius: var(--border-radius-rem);
  border-end-start-radius: var(--border-radius-rem);
  padding-inline: var(--padding-inset-rem);
}

pre>code {
  padding: 0 var(--length-content-inline-inset-rem) !important;
  /* padding: 0 !important; */
  display: block;
  width: max-content;
  background-color: transparent;
}


p {
  text-align: left;
}
